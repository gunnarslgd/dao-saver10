#pragma checksum "C:\test\dao-saver10\Views\Shared\_Layout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7a855c06b09a340202853a96c80ebb8bbf1dba3f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Layout), @"mvc.1.0.view", @"/Views/Shared/_Layout.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\test\dao-saver10\Views\_ViewImports.cshtml"
using Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\test\dao-saver10\Views\_ViewImports.cshtml"
using Charts.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a855c06b09a340202853a96c80ebb8bbf1dba3f", @"/Views/Shared/_Layout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"07a1ee3e3d702eacfdb6d1e44ae0cc3551f04e03", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Layout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 100%; margin: 0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!--\n    THIS EXAMPLE WAS DOWNLOADED FROM https://echarts.apache.org/examples/en/editor.html?c=candlestick-sh-2015\n-->\n<!DOCTYPE html>\n<html style=\"height: 100%\">\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a855c06b09a340202853a96c80ebb8bbf1dba3f3648", async() => {
                WriteLiteral("\n    <meta charset=\"utf-8\">\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a855c06b09a340202853a96c80ebb8bbf1dba3f4640", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        var key = 'NASDAQ100';
        var param = location.search.split('key=')[1];
        if (param) key = param;
    </script>
    <div>
        <menu>
            <li><a href=""Home?key=NASDAQ100"">NASDAQ100</a></li>
            <li><a href=""Home?key=DAX%20PERFORMANCE-INDEX"">DAX PERFORMANCE-INDEX</a></li>
            <li><a href=""Home?key=Euronext%20100%20Index"">Euronext 100 Index</a></li>
            <li><a href=""Home?key=JAPAN225"">JAPAN225</a></li>
            <li><a href=""Home?key=HANG%20SENG%20INDEX"">HANG SENG INDEX</a></li>
            <li><a href=""Home?key=Shenzhen%20Component"">Shenzhen Component</a></li>
            <li><a href=""Home?key=SSE%20Composite%20Index"">SSE Composite Index</a></li>
            <li><a href=""Home?key=EURUSD"">EURUSD</a></li>
            <li><a href=""Home?key=NZDAUD"">NZDAUD</a></li>
        </menu>
    </div>

    <div id=""container"" style=""height: 100%""></div>


    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/echarts@5");
                WriteLiteral(@".3.0/dist/echarts.min.js""></script>
    <!-- Uncomment this line if you want to dataTool extension
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/extension/dataTool.min.js""></script>
    -->
    <!-- Uncomment this line if you want to use gl extension
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js""></script>
    -->
    <!-- Uncomment this line if you want to echarts-stat extension
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js""></script>
    -->
    <!-- Uncomment this line if you want to use map
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/echarts@5.3.0/map/js/china.js""></script>
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/echarts@5.3.0/map/js/world.js""></script>
    -->
    <!-- Uncomment these two lines if you want to use bmap extension
    <script type=""text/javascript"" src=""https://api.map.baidu.co");
                WriteLiteral("m/api?v=2.0&ak=<Your Key Here>\"></script>\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.0/dist/extension/bmap.min.js\"></script>\n    -->\n    ");
#nullable restore
#line 51 "C:\test\dao-saver10\Views\Shared\_Layout.cshtml"
Write(RenderBody());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
    <script type=""text/javascript"">
        var dom = document.getElementById(""container"");
        var myChart = echarts.init(dom);
        var app = {};

        var option;

        function calculateMA(dayCount, data) {
            var result = [];
            for (var i = 0, len = data.length; i < len; i++) {
                if (i < dayCount) {
                    result.push('-');
                    continue;
                }
                var sum = 0;
                for (var j = 0; j < dayCount; j++) {
                    sum += +data[i - j][1];
                }
                result.push(sum / dayCount);
            }
            return result;
        }

        var buyDays = 0;
        var highers = [];

        function calculateBreakThrough(data) {
            var result = [];
            for (var i = 1, len = data.length; i < len; i++) {
                if (data[i - 1][3] >= data[i][3]) {
                    result.push('-');
                    continue;
                }

              ");
                WriteLiteral(@"  highers.push(data[i][3]);
                buyDays++;

                result.push(highers.reduce((partialSum, a) => partialSum + a, 0) / buyDays);
            }
            return result;
        }

        fetch(`Home/MarketData?key=${key}`)
            .then(response => response.json())
            .then(result => {
                const dates = result.map(function(item) {
                    return item.rowKey;
                });

                const data = result.map(function(item) {
                    return [+item.open, +item.close, +item.low, +item.high];
                });

                option = {
                    legend: {
                        data: ['æ—¥K', 'MA60', 'Breakout'],
                        inactiveColor: '#777'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            animation: false,
                            type: 'cross',
                            lineStyle: {
   ");
                WriteLiteral(@"                             color: '#376df4',
                                width: 2,
                                opacity: 1
                            }
                        }
                    },
                    xAxis: {
                        type: 'category',
                        data: dates,
                        axisLine: { lineStyle: { color: '#8392A5' } }
                    },
                    yAxis: {
                        scale: true,
                        axisLine: { lineStyle: { color: '#8392A5' } },
                        splitLine: { show: false }
                    },
                    grid: {
                        bottom: 80
                    },
                    dataZoom: [
                        {
                            textStyle: {
                                color: '#8392A5'
                            },
                            handleIcon:
                                'path://M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9");
                WriteLiteral(@",9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
                            dataBackground: {
                                areaStyle: {
                                    color: '#8392A5'
                                },
                                lineStyle: {
                                    opacity: 0.8,
                                    color: '#8392A5'
                                }
                            },
                            brushSelect: true
                        },
                        {
                            type: 'inside'
                        }
                    ],
                    series: [
                        {
                            type: 'candlestick',
                            name: 'Day',
                            data: data,
                            itemStyle: {
                                color: '#FD1050',
                       ");
                WriteLiteral(@"         color0: '#0CF49B',
                                borderColor: '#FD1050',
                                borderColor0: '#0CF49B'
                            }
                        },
                        {
                            name: 'MA60',
                            type: 'line',
                            data: calculateMA(60, data),
                            smooth: true,
                            showSymbol: false,
                            lineStyle: {
                                width: 1
                            }
                        },
                        {
                            name: 'Breakout',
                            type: 'line',
                            data: calculateBreakThrough(data),
                            smooth: true,
                            showSymbol: false,
                            color: '#F05228',
                            lineStyle: {
                                width: 3
                            }
        ");
                WriteLiteral("                },\n                    ]\n                };\n\n                if (option && typeof option === \'object\') {\n                    myChart.setOption(option);\n                }\n            });\n\n\n    </script>\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</html>\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
